name: CI/CD Pipeline

on:
  push:
    branches:
      - stg
  workflow_run:
    workflows: ["main.yml"]
    types:
      - completed

jobs:
  Promote-container-stg:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow == 'Promote-container-stg'
    steps:
      - name: Promote the container from dev to stg
        run: echo "Promote the container from dev to stg"

  generate_tag_stg:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_run' && github.event.workflow == 'generate_tag_stg')
    steps:
      - name: Generate TAG
        run: echo "TAG=$(cat VERSION)" > tag.env
    needs: Promote-container-stg
    outputs:
      tag: ${{ steps.generate_tag_stg.outputs.tag }}

  auto-release-master_stg:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_run' && github.event.workflow == 'auto-release-master_stg')
    steps:
      - name: Release $TAG
        run: echo "Release ${{ needs.generate_tag_stg.outputs.tag }}"
        env:
          TAG: ${{ needs.generate_tag_stg.outputs.tag }}
    needs: generate_tag_stg

  Deploy-stg:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow == 'Promote-container-stg'
    steps:
      - name: Deploy in Staging
        run: |
          # Your deployment script here
        env:
          TAG: ${{ needs.generate_tag_stg.outputs.tag }}
    needs: auto-release-master_stg

  unit-test_stg:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow == 'Deploy-stg'
    steps:
      - name: Run Unit Tests
        run: echo "Running smoke tests..."
    continue-on-error: true
    needs: Deploy-stg

  Shadow-test_stg:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow == 'Deploy-stg'
    steps:
      - name: Run Shadow Tests
        run: echo "Running Shadow tests..."
    continue-on-error: true
    needs: Deploy-stg

  Integration-test_stg:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow == 'Deploy-stg'
    steps:
      - name: Run Integration Tests
        run: echo "Running Integration tests..."
    continue-on-error: true
    needs: Deploy-stg

  Load-test_stg:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow == 'Deploy-stg'
    steps:
      - name: Run Load Tests
        run: echo "Running load tests..."
    continue-on-error: true
    needs: Deploy-stg

  End-user-test_stg:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow == 'Deploy-stg'
    steps:
      - name: Run End-user Tests
        run: echo "Running end-user tests..."
    continue-on-error: true
    needs: Deploy-stg

  notification_email_stg:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow == 'End-user-test_stg'
    steps:
      - name: Send Notification
        run: echo "Running notification send..."
    needs: [unit-test_stg, Shadow-test_stg, Integration-test_stg, Load-test_stg, End-user-test_stg]
